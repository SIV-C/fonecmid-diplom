
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)
	
	Ошибки = Новый Массив;
	
	ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора, ВКМ_НачалоДействияДоговора, ВКМ_КонецДействияДоговора");
	
	Если ДанныеДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Отказ = Истина;
		Ошибки.Добавить("Тип договора не абонентская плата");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка,
	               |	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
	               |	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
	               |	ДоговорыКонтрагентов.ВКМ_НачалоДействияДоговора КАК ВКМ_НачалоДействияДоговора,
	               |	ДоговорыКонтрагентов.ВКМ_КонецДействияДоговора КАК ВКМ_КонецДействияДоговора,
	               |	ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты КАК ВКМ_СуммаАбонентскойПлаты,
	               |	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК ВКМ_СтоимостьЧасаРаботы,
	               |	ВКМ_УсловияОплатыСотрудников.ПроцентОтРабот КАК ПроцентОтРабот,
	               |	ВКМ_ОбслуживаниеКлиента.Клиент КАК Клиент,
	               |	ВКМ_ОбслуживаниеКлиента.Договор КАК Договор
	               |ИЗ
	               |	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |		ПО ВКМ_ОбслуживаниеКлиента.Договор = ДоговорыКонтрагентов.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	               |		ПО ВКМ_ОбслуживаниеКлиента.Специалист = ВКМ_УсловияОплатыСотрудников.Сотрудник
	               |ГДЕ
	               |	НЕ ВКМ_ОбслуживаниеКлиента.ПометкаУдаления
	               |	И ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если ДанныеДоговора.ВКМ_НачалоДействияДоговора > Дата 
		ИЛИ ДанныеДоговора.ВКМ_КонецДействияДоговора < Дата Тогда			
			Ошибки.Добавить("Дата документа не входит в период действия договора");		
	КонецЕсли;		
	
	Если Ошибки.Количество() <> 0 Тогда
		
		Для Каждого Ошибка Из Ошибки Цикл
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = Ошибка;
			Сообщение.Сообщить();
			Отказ = Истина;	
		КонецЦикла;	
		
		Возврат
		
	КонецЕсли;	
	
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	Для Каждого ТекСтрока из ВыполненныеРаботы Цикл
		
		// регистр ВКМ_ВыполненныеКлиентуРаботы
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ТекСтрока.ФактическиПотраченоЧасов;
		Движение.СуммаКОплате = ТекСтрока.ФактическиПотраченоЧасов * Выборка.ВКМ_СтоимостьЧасаРаботы;
		
		// регистр ВКМ_ВыполненныеСотрудникомРаботы Приход
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = ТекСтрока.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = ТекСтрока.ЧасыКОплатеКлиенту * Выборка.ВКМ_СтоимостьЧасаРаботы * Выборка.ПроцентОтРабот / 100;
		
	КонецЦикла;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;	
	
	Если ЭтоНовый() ИЛИ Модифицированность() Тогда
		СоздатьУведомление();
	КонецЕсли;	
			
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьУведомление()
	
	ТекстУведомления = СтрШаблон("Была добавлена заявка %1. |Дата работ: %1 - %2. | Исполнитель: %3",
	 	Ссылка, ВремяНачалаРаботПлан, ВремяОкончанияРаботПлан, Специалист);
	
	НовоеУведомление = Справочники.ВКМ_УведомленияТГ.СоздатьЭлемент();
	НовоеУведомление.ТекстСообщения = ТекстУведомления;
	НовоеУведомление.Записать();
	
КонецПроцедуры	

#КонецОбласти
