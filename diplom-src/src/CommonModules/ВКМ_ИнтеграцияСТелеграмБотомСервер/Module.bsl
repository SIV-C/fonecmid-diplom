#Область ПрограммныйИнтерфейс

// Используется в регламентном задании ВКМ_ОтправитьУведомлениеВЧатТГ
//
Процедура ОтправитьСообщениеВЧат() Экспорт

	//НеотправленныеУведомления = Новый Массив;
	ОтправленныеУведомления = Новый Массив;
	
	Уведомления = СообщенияУведомлений();

	Если Уведомления.Количество() <> 0 Тогда

		ТокенУправления = СокрЛП(ТокенУправления());
		ИдентификаторГруппы = СокрЛП(ИдентификаторГруппы());
		АдресТГ = "api.telegram.org";

		Соединение = Новый HTTPСоединение(АдресТГ, , , , , Новый ЗащищенноеСоединениеOpenSSL);

		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Content-Type", "application/json");

		АдресЗапроса = СтрШаблон("bot%1/sendMessage", ТокенУправления);

		Для Каждого Уведомление Из Уведомления Цикл

			ТелоЗапроса = ТелоЗапросаВJSON(Уведомление, ИдентификаторГруппы);

			Запрос = Новый HTTPЗапрос(АдресЗапроса, Заголовки);
			Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);

			Попытка
				Результат = Соединение.ОтправитьДляОбработки(Запрос);
			Исключение
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Отправка уведомления в ТГ'"), УровеньЖурналаРегистрации.Ошибка, , ,
					ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;

			Если Результат.КодСостояния <> 200 Тогда
				//НеотправленныеУведомления.Добавить(Уведомление);
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Отправка уведомления в ТГ'"), УровеньЖурналаРегистрации.Ошибка, , ,
					Результат.ПолучитьТелоКакСтроку());
			Иначе
				// Теперь будут фиксироваться только отправленные уведомления и только они будут выбираться при удалении
				ОтправленныеУведомления.Добавить(Уведомление);				
			КонецЕсли;

		КонецЦикла;
		
		ОчиститьСправочникУведомлений(ОтправленныеУведомления);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТокенУправления()

	Возврат Константы.ВКМ_ТокенУправленияТелеграмБотом.Получить()

КонецФункции

Функция ИдентификаторГруппы()

	Возврат Константы.ВКМ_ИдентификаторГруппыДляОповещения.Получить()

КонецФункции

Функция СообщенияУведомлений()

	Сообщения = Новый Массив;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_УведомленияТГ.ТекстСообщения
	|ИЗ
	|	Справочник.ВКМ_УведомленияТГ КАК ВКМ_УведомленияТГ";

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Сообщения.Добавить(Выборка.ТекстСообщения);
	КонецЦикла;

	Возврат Сообщения

КонецФункции

Функция ТелоЗапросаВJSON(Уведомление, ИдентификаторГруппы)

	Данные = Новый Структура;
	Данные.Вставить("text", Уведомление);
	Данные.Вставить("chat_id", ИдентификаторГруппы);

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Данные);
	СтрокаJSON = ЗаписьJSON.Закрыть();

	Возврат СтрокаJSON

КонецФункции

Процедура ОчиститьСправочникУведомлений(ОтправленныеУведомления)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_УведомленияТГ.Ссылка
	|ИЗ
	|	Справочник.ВКМ_УведомленияТГ КАК ВКМ_УведомленияТГ
	|ГДЕ
	|	ВКМ_УведомленияТГ.Ссылка В (&ОтправленныеУведомления)";

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл		
		ОбъектСправочника = Выборка.ПолучитьОбъект();
		ОбъектСправочника.Удалить();	
	КонецЦикла;

КонецПроцедуры

#КонецОбласти